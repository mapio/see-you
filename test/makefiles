#!/bin/bash

assert() {
	echo -ne "\033[31m$1...\033[0m "
	rm -f err diff-*
	if make -e pulisci test $2 exit_on_fail=false > /dev/null 2> err; then
		if [ -z "$4" ] || grep -q "$4" err; then
			res="$(diff output-0.txt actual-0.txt 2>/dev/null | grep -E '^(<|>)' | tr \\n \#)"
			if [ "$res" == "$3" ]; then
				echo -n OK
			else
				echo -n FAIL, stdout: "$res"
				exit 1
			fi
		else
			echo -n FAIL, stderr: "$(cat err)"
			exit 1
		fi
	else
		echo -n 'FAIL [make failed]'
	fi

	if [ -z "$5" ]; then

		echo -ne " \033[31m(f)\033[0m "
		rm -f err
		if make -e pulisci test $2 > /dev/null 2> err; then
			echo 'NOT FAILED [make]'
			exit 1
		else
			if [ -z "$4" ] ||  grep -q "$4" err; then
				res="$(diff output-0.txt actual-0.txt 2>/dev/null | grep -E '^(<|>)' | tr \\n \#)"
				if [ "$res" == "$3" ]; then
					echo OK.
				else
					echo FAIL, stdout: "$res".
					exit 1
				fi
			else
				echo FAIL, stderr: "$(cat err)".
			fi
		fi

	else
		echo .
	fi
}

export MAKEFILES=$(pwd)/support/Makefile

tempdir=$(mktemp -d /tmp/cu-XXXXXXXXX) || exit 1
cd $tempdir

touch args-0.txt input-0.txt
echo -n AB > output-0.txt
echo -e '#include <stdio.h>\nint main( void ) { printf( "AB" ); return 0; }' > soluzione.c

assert "No error" "" "" "" NF

assert "Truncate" "max_output=1" "< AB#> A#" ""

echo 'int main( void ) { return 0; }' > soluzione.c
assert "Diff" "" "< AB#"

echo -e '#include <stdio.h>\nint main( void ) { printf( "X" ); return 1; }' > soluzione.c
assert "Retval (diff)" "" "< AB#> X#" "non-zero return value"

echo -e '#include <stdio.h>\nint main( void ) { printf( "AB" ); return 1; }' > soluzione.c
assert "Retval (nodiff)" "" "" "non-zero return value"

echo 'int main( void ) { for (;;); return 0; }' > soluzione.c
assert "Timeout" "" "" "execution timeout"

echo 'int main( void ) { int *x=0; *x=1; return 0; }' > soluzione.c
assert "Segfault" "" "" "segmentation fault"

chmod -R u+rwx $tempdir; rm -rf $tempdir
